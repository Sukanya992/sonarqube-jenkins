pipeline {
    agent any

    tools {
        maven 'maven' // Use the Maven name from Global Tool Config
    }
    environment {
        SONARQUBE_URL = 'http://35.209.243.49:9000/'
        SONARQUBE_TOKEN = credentials('sonarqube-jenkins') // Store in Jenkins Credentials
        GCP_ACCESS_TOKEN = sh(script: "gcloud auth application-default print-access-token", returnStdout: true).trim()

    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url:'https://github.com/Sukanya992/sonarqube-jenkins.git'
            }
        }

        stage('Build & Test') {
            steps {
                sh 'mvn clean verify'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh "mvn sonar:sonar -Dsonar.projectKey=sonar-jenkins -Dsonar.host.url=${SONARQUBE_URL} -Dsonar.login=${SONARQUBE_TOKEN}"
                }
            }
        }
        stage('Deploy to Google Artifact Registry') {
            steps {
                withCredentials([file(credentialsId: 'sonar-servicekey', variable: 'GOOGLE_APPLICATION_CREDENTIALS')]) {
                    sh '''
                    gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
                    gcloud auth configure-docker us-central1-maven.pkg.dev --quiet
                    mvn deploy
                    '''
                }
            }
        }
}
