pipeline {
    agent any

    tools {
        maven 'maven' // Ensure Maven is configured in Jenkins
    }

    environment {
        SONARQUBE_URL = 'http://35.209.243.49:9000/'
        SONARQUBE_TOKEN = credentials('sonarqube-jenkins') // Stored in Jenkins credentials
        GOOGLE_APPLICATION_CREDENTIALS = credentials('servicekey') // Ensure this exists in Jenkins credentials
        GCP_REGION = 'us-central1'  // Change if your Artifact Registry is in a different region
        GCP_PROJECT_ID = 'sukanya-project-452710'  // Replace with your Google Cloud Project ID
        ARTIFACT_REGISTRY_REPO = 'sonar'  // Replace with your Artifact Registry repository name
        GOOGLE_CLOUD_REGION = 'us-central1'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/Sukanya992/sonarqube-jenkins.git'
            }
        }

        stage('Setup GCP Authentication') {
            steps {
                sh '''
                gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
                export GCP_ACCESS_TOKEN=$(gcloud auth print-access-token)
                gcloud config set project $GCP_PROJECT_ID
                gcloud auth configure-docker $GCP_REGION-docker.pkg.dev --quiet
  
                '''
            }
        }

        stage('Build & Test') {
            steps {
                sh 'mvn clean verify'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh '''
                    mvn sonar:sonar \
                        -Dsonar.projectKey=sonar-jenkins \
                        -Dsonar.host.url=${SONARQUBE_URL} \
                        -Dsonar.login=${SONARQUBE_TOKEN}
                    '''
                }
            }
        }
        stage('Authenticate with GCP') {
            steps {
                withCredentials([file(credentialsId: 'servicekey', variable: 'GOOGLE_CLOUD_SVC')]) {
                    sh 'gcloud auth activate-service-account --key-file=$GOOGLE_CLOUD_SVC'
                    sh 'gcloud auth configure-docker us-central1-maven.pkg.dev'
                }
            }
        }
        stage('Build and Deploy to Artifact Registry') {
            steps {
                withCredentials([file(credentialsId: 'servicekey', variable: 'GOOGLE_CLOUD_SVC')]) {
                 

                sh '''
mvn clean package deploy \
-DaltDeploymentRepository=google-artifact::https://us-central1-maven.pkg.dev/sukanya-project-452710/sonar
                '''
              } 
            }
        }
    }
}

    


